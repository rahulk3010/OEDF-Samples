/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */

plugins { 
    id "progress.openedge.abl-base" version "2.3.0" 
    id "base" 
}

group = 'com.progress.openedge'
version = "1.0.0"
description = 'Sports App'

abl {
    println "DLC: ${abl.dlcHome}"
}

// DB creation tasks
task createSports2020(type: CreateDB){
    dbName = 'sports'
    sourceDb = "${dlcHome}/sports2020"
    outputDir = "${buildDir}/db/sports2020"
}
// DB creation tasks ends.

// Web App tasks - "PASOEContent/" folder
task compileWebApp(type: ABLCompile) {
    source("PASOEContent/WEB-INF/openedge")
    include('**/*.p', '**/*.cls')
    exclude('**/*.txt', '**/*.conf')
    propath("PASOEContent/WEB-INF/openedge", "${abl.dlcHome}/tty/OpenEdge.Core.pl")
    rcodeDir = "${buildDir}/rcode/PASOEContent/WEB-INF/openedge"
    avmOptions{
        tty.enabled='true'
    }
    compileOptions{
        xref.enabled = true
        strictOptions{
            requireFullNames='warning'
        }
        outputType='json'
    }
}

task packageWebApp(type: OEWar){
    webAppName = "SportsREST"
    archiveVersion = "" // to ignore version in the archive name, otherwise has to be handled during deployment
    verbose = true
    projectLocation = project.projectDir
    destinationDirectory = project.file "${project.distsDirectory.get()}/webapps"

    // exclude Sources from 'openedge' directory
    // (the ANT task used internally does it by default but added here anyway)
    exclude "PASOEContent/WEB-INF/openedge/*.(cls|p|i)"

    webInf {
        from("${buildDir}/rcode/PASOEContent/WEB-INF/openedge")
        into("openedge")
    }

    // Any additional folders/files can be added using a script similar to this:
    // from("src/static") {
    //     into("static")
    //     include "**/*.js"
    //     include "**/*.json"
    // }

    manifest {
        attributes "Implementation-Title": "My Sports ABL Web Application"
        attributes "Implementation-Version": "1.0.0"
        // from ("PASOEContent/META-INF/MANIFEST.MF")
    }

    doNotTrackState("Issue with 'projectLocation' property, after Gradle 8 support. Should be fixed in OEDF version 2.4.0")
}
packageWebApp.dependsOn "compileWebApp"
assemble.dependsOn "packageWebApp"

// These shouldn't be needed. Gradle 8 convention is causing some issues because project root is an input for the 'OEWar' task type
packageWebApp.mustRunAfter "compileABLApp"
packageWebApp.mustRunAfter "testABLApp"
// Web App tasks ends.

// ABL App tasks - .oear archive
task compileABLApp(type: ABLCompile) {
    source("AppServer")
    include('**/*.p', '**/*.cls')
    exclude('**/*.txt', '**/*.conf')
    
    propath("AppServer", "${abl.dlcHome}/tty/OpenEdge.Core.pl")
    propath("${abl.dlcHome}/tty/OpenEdge.BusinessLogic.pl") // appends to previous PROPATH entries

    rcodeDir = "${buildDir}/rcode/AppServer"
    avmOptions{
        tty.enabled='true'
    }
    compileOptions{
        xref.enabled = true
        strictOptions{
            requireFullNames='warning'
        }
    }
    dbConnection{
		dbName="${buildDir}/db/sports2020/sports"
		connectionParameters = "-1"

        // alias details, if any
		// aliases = ['sports2020Alias1', 'sports2020Alias2']
	}
}
compileABLApp.dependsOn "createSports2020" // add dependency on DB creation task(s)

task testABLApp(type: ABLUnit){
    source("tests/AppServer")
    include("**/*Suite.cls")
    propath("tests/AppServer", "AppServer")
    outputDir = "${buildDir}/test-results/test"
    dbConnection{
		dbName="${buildDir}/db/sports2020/sports"
		connectionParameters = "-1"
	}
    arguments = [haltOnFailure: "true"]
}
testABLApp.dependsOn "createSports2020", "compileABLApp"
check.dependsOn "testABLApp"

task packageABLApp(type: Oear) {
    ablAppName = "SportsREST"
    archiveVersion = ""
    destinationDirectory = project.file "${project.distsDirectory.get()}/ablapps"  //will create 'Sports.oear' file at this location
    tlr {
        from 'tlr'
        include '**/*.properties'
        include '**/*.xml'
    }
    webapps {
        from "${project.distsDirectory.get()}/webapps"
        include '**/*.war'
        include '**/*.zip'
    }
    openedge {
        from "${buildDir}/rcode/AppServer"
        include '**/*.r'
    }
    conf {
        from 'conf'
        exclude '**/*.MF'   //exclude direct copy of manifest file and append using manifest section
    }
    manifest {
        attributes "Implementation-Title": "My Sports ABL Application"
        attributes "Implementation-Version": "1.0.0"
        // from ("conf/MANIFEST.MF")
    }
}
packageABLApp.dependsOn "compileABLApp"
packageABLApp.dependsOn "packageWebApp"
assemble.dependsOn "packageABLApp"
// ABL App tasks ends.
