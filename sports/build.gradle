/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */

plugins { 
    id "progress.openedge.abl-base" version "2.2.1" 
    id "base" 
}

// DLC should be set as Environment Variable / System Property or Gradle Property to use OEDF plugins 
println "DLC: ${abl.dlcHome}"

// Global settings that other tasks use
abl {
    // Database details defined inside this section applies to other tasks such as ABLCompile and ABLUnit tasks
    dbConnection {
        dbName="${buildDir}/db/sports2020/sports"
        connectionParameters = "-1" // use single user mode
    }
    dbConnection {
        dbName="${buildDir}/db/avengers/avengers"
        connectionParameters = "-1" // use single user mode
    }
}

// Create Sports database as part of the build
task createSportsDB(type: CreateDB) {
    dbName = 'sports'
    sourceDb = "${dlcHome}/sports2020"
    outputDir = "${buildDir}/db/sports2020"
}

// Create Superheroes database as part of the build
task createAvengersDB(type: CreateDB) {
    dbName = 'avengers'
    structFile = "src/main/resources/avengers/avengers.st"
    schemaFile = "src/main/resources/avengers/avengers.df"
    blockSize = 8
    outputDir = "${buildDir}/db/avengers"
}

// Populate data into Avengers DB for Unit testing as part of the build
task populateDataIntoAvengersDB() {
    // Put the ANT part in a 'doLast{}' or 'doFirst{}' section so that it is considered a task executable action.
    // Everything else are just configurations. Check this for more info - https://docs.gradle.org/current/userguide/ant.html 
    doLast {
        ant.PCTLoadData(srcDir: "src/test/resources/avengers", dlcHome: "${abl.dlcHome}") {
            ant.DBConnection(dbName: "${buildDir}/db/avengers/avengers", singleUser: "true")
            ant.Table(name: "avengers") // Load 'avengers.d' from the 'srcDir'
        }
    }
}
populateDataIntoAvengersDB.dependsOn "createAvengersDB"

// Compile the Sport app sources
task compileSportsApp(type: ABLCompile) {
    source  "src/main/abl"
    propath "src/main/abl"
    include "**/*.cls"
    include "**/*.p"
    rcodeDir = "${buildDir}/rcode/main/abl"

    // A task sepecific DB details can be provided in the task itself.
    // To have more DB connections, just provide DB connection details in a new 'dbConnection' section 
    // dbConnection {
    //     // connection details
    // }
}
compileSportsApp.dependsOn "createSportsDB", "createAvengersDB"

// Unit test the Sport app tests
task testSportsApp(type: ABLUnit) {
    source  "src/test/abl"
    propath("src/main/abl", "src/test/abl")
    include "**/*.cls"
    outputDir = "${buildDir}/test-results/test"
    arguments = [haltOnFailure: "true"]
}
// For test ensure the databases are created and the data is loaded
testSportsApp.dependsOn "createSportsDB", "createAvengersDB", "populateDataIntoAvengersDB"

// Add dependencies for the life cycle tasks
check.dependsOn "testSportsApp", "compileSportsApp"
build.dependsOn "compileSportsApp"
